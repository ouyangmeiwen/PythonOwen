
环境安装
sudo apt update
sudo apt install python3
sudo apt install python3-pip

which python3

sudo ln -s /usr/bin/python3 /usr/bin/python

python --version

#pip install psycopg2   #postsql

#pip install cx_Oracle   #oracle

#pip install django-pyodbc-azure  




#注意mysql数据库版本问题
pip install -r requirements.txt 





#数据库对象生成  每次添加新的数据结构的时候要执行
1.python manage.py makemigrations    创建数据库脚本
2.python manage.py migrate           同步数据库脚本到数据库

3.python manage.py loaddata db.json  导入初始化脚本  
    注意 settings.py
            USE_TZ = True
            用完记得改回来
            USE_TZ = False
            
4.python manage.py createsuperuser   创建管理员账号密码
5.管理员账号密码  admin 123456 用这个  
6.根据数据库结构生成对象python manage.py inspectdb > dbmodel/models.py    根据数据库生成model    直接拷贝到你要的地方







pip install paddleocr
pip install paddlepaddle

调试 直接调试不行的话添加文件
    F5


运行服务
    python manage.py runserver 0.0.0.0:8000



nohup ./python manage.py runserver 0.0.0.0:8000>manage.log 2>&1 &


chmod +x start.sh
./start.sh



#!/bin/bash

while true; do
    # 启动应用
   nohup ./python manage.py runserver 0.0.0.0:8000>manage.log 2>&1 &

    # 检查进程退出码，如果非零则重启
    if [ $? -ne 0 ]; then
        echo "Application crashed. Restarting..."
        sleep 5  # 延迟 5 秒后重启
    fi
done






launch.json
    {
        "version": "0.2.0",
        "configurations": [
            {
                "name": "Django: Run manage.py",
                "type": "debugpy",
                "request": "launch",
                "program": "${workspaceFolder}/manage.py",
                "args": [
                    "runserver",
                    "0.0.0.0:8000"
                ],
                "django": true,
                "console": "integratedTerminal",
                "justMyCode": true
            }
        ]
    }



docker 安装

    sudo apt  install docker.io 
    sudo usermod -aG docker $USER
    newgrp docker


linux 部署
    
#删除docker
docker rm -f $(docker ps -aq)
docker rmi -f $(docker images -q)


docker build -t djaonapp:latest . -f Dockerfile
docker run -d -p 8000:8000 --restart=always   --name djaonapp djaonapp:latest
http://localhost:8000/api/swagger/

docker save -o ./djaonapp.tar imageid
docker save -o ./python:3.9-slim_owen.tar c21


upload
docker load < python:3.9-slim_owen.tar
docker tag imageid python:3.9-slim_owen #可以重命名
命名完然后就可以直接使用Dockfile

# 使用 Python 官方基础镜像
FROM python:3.9-slim_owen
...
